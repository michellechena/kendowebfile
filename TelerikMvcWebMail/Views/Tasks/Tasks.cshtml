@{
    ViewBag.Title = "Task";
}

@section PageStyles {
    <link type="text/css" href="@Url.Content("~/Content/tasks.css")" rel="stylesheet" />
}

@Scripts.Render("~/Scripts/tasks.js")

@model IEnumerable<TelerikMvcWebMail.Models.TaskViewModel>

@Html.Partial("Sidebar")

<div class="main-section">
    <div class="toolbar">
        <span class="btn btn-delete">Delete</span>
    </div>
    <div class="inner-section">
        <span class="searchbox">
            <input type="text" class="k-input long-textbox search-textbox" placeholder="Search tasks ..." name="to-textbox">
        </span>
        @(Html.Kendo().Grid(Model)
            .Name("mainWidget")
            .Columns(columns =>
            {
                columns.Bound(p => p.Id)
                    .Title("")
                    .Width(40)
                    .ClientTemplate("<input type='checkbox' class='chkbx' />")
                    .HeaderTemplate("<input type='checkbox' class='master-checkbox' />");
                columns.Bound(p => p.Subject)
                    .Title("Subject")
                    .HtmlAttributes(new { @class = "subject-col" });
                columns.Bound(p => p.CreatedOn).Title("Created On")
                    .Width(300)
                    .Format("{0:g}");
                columns.Bound(p => p.Category).Title("Category");

            })
            .Editable(e => e
                .Mode(GridEditMode.InLine)
                .DisplayDeleteConfirmation(false)
            )
            .Selectable(s => s.Mode(GridSelectionMode.Multiple))
            .DataSource(dataSource => dataSource
                .Ajax()
                .Read(read => read.Action("Tasks_Read", "Tasks"))
                .Create(create => create.Action("Tasks_Create", "Tasks"))
                .Update(update => update.Action("Tasks_Update", "Tasks"))
                .Destroy(destroy => destroy.Action("Tasks_Destroy", "Tasks"))
                .Model(model => {
                    model.Id(p => p.Id);
                    model.Field(p => p.Id).Editable(false);
                    model.Field(p => p.CreatedOn).Editable(false);
                })
            )
            .Events(e => e
                .Change("taskSelectionChanged")
                .DataBound("tasksGridDataBound")
            )
        )
    </div>
</div>